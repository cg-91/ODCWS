package com.capgemini.carwash.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.capgemini.carwash.entity.CarDetails;
import com.capgemini.carwash.exception.BadRequestException;
import com.capgemini.carwash.repository.CarRepository;
import com.capgemini.carwash.service.CarService;
import com.google.gson.Gson;

import lombok.extern.slf4j.Slf4j;

@RestController
@Slf4j
@CrossOrigin
@RequestMapping("/api")
public class CarController {

	@Autowired
	private CarService carService;
	
	@Autowired
	private CarRepository carRepository;
	
	@GetMapping("/car/carlisting")
	public ResponseEntity<?> getAllCars(){
//		List<CarDetails> carList = carService.getAllCars();
		Map<Object, Object> carMap = new HashMap<Object, Object>();
		carMap.put("status", "success");
		carMap.put("data", carService.getAllCars());
//		Gson gson = new Gson();
//        String json = gson.toJson(carMap);
	
		log.info("====fetchging all the Cars====");
		return ResponseEntity.ok(carMap);
	}
	
	@GetMapping("/carid/{id}")
	public ResponseEntity<?> getCarsById(@PathVariable("id") Long carid){
		Optional<CarDetails> carDetails = carService.getCarById(carid);
		log.info("===searching for a car with id {}", carid);
		if(!carDetails.isPresent()) {
			log.error("Id "+ carid + " is not existed");
			ResponseEntity.badRequest().build();
		}
		return ResponseEntity.ok(carDetails.get());
	}
	
//	@GetMapping("/carname/{name}")
//	public ResponseEntity<?> getCarsByName(@PathVariable("name") String carname){
//		CarDetails carDetails = carService.getCarByName(carname);
//		log.info("===searching for a car with name {}", carname);
//		return ResponseEntity.ok(carDetails);
//	}
	
	@PostMapping("/car/store")
	public ResponseEntity<?> storeCarDetails(@Valid @RequestBody CarDetails carDetails){
		
		if (carRepository.existsByCarid(carDetails.getCarid())) {
			throw new BadRequestException("Id is already exist");
		}
		CarDetails carDetail = carService.saveCar(carDetails);
		log.info("===Save car details===");
		return ResponseEntity.ok(carDetail);
	}

	
	@DeleteMapping("/delete/car/{id}")
	public ResponseEntity<?> deleteCarDetails(@PathVariable("id") Long carid){
		if (carRepository.existsByCarid(carid)) {
			carService.deleteCarById(carid);
		}else {
			throw new BadRequestException("Id dose not exist");
		}
		log.info("===Delete car details===");
		return ResponseEntity.ok(carid);
	}
}
